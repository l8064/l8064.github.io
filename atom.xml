<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>梁耐松</title>
  <subtitle>欢迎访问我的个人主页 &gt;_&lt;</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="lns666.me/"/>
  <updated>2017-05-25T09:33:58.000Z</updated>
  <id>lns666.me/</id>
  
  <author>
    <name>梁耐松</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android关闭Activity的方法</title>
    <link href="lns666.me/blog/17/Android-CloseActivity/"/>
    <id>lns666.me/blog/17/Android-CloseActivity/</id>
    <published>2017-05-25T10:20:12.000Z</published>
    <updated>2017-05-25T09:33:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>Activity是Android最常用的组件之一，Activity可以用来显示界面，被打开的Activity始终关闭，本文将介绍几种常用的Activity关闭方法。</p>
<h2 id="关闭当前Activity"><a href="#关闭当前Activity" class="headerlink" title="关闭当前Activity"></a>关闭当前Activity</h2><p>关闭当前Activity的几种方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">//关闭当前Activity方法一  </span></div><div class="line">finish();  </div><div class="line">      </div><div class="line"><span class="comment">//关闭当前Activity方法二  </span></div><div class="line">android.os.Process.killProcess(android.os.Process.myPid());  </div><div class="line">      </div><div class="line"><span class="comment">//关闭当前Activity方法三  </span></div><div class="line">System.exit(<span class="number">0</span>);  </div><div class="line">  </div><div class="line"><span class="comment">//关闭当前Activity方法四  </span></div><div class="line"><span class="keyword">this</span>.onDestroy();</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="关闭指定Activity"><a href="#关闭指定Activity" class="headerlink" title="关闭指定Activity"></a>关闭指定Activity</h2><p>例如:在ActivityB中关闭ActivityA.</p>
<p>1.在ActivityA里创建静态变量instance，初始化为this<br><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> ActivityA instance = <span class="keyword">null</span>;</div><div class="line">instance = <span class="keyword">this</span>;</div></pre></td></tr></table></figure></p>
<p>2.在 ActivityB里执行ActivityA.instance.finish()来关闭ActivityA<br><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">ActivityA.instance.finish();</div></pre></td></tr></table></figure></p>
<h2 id="关闭所有Activity"><a href="#关闭所有Activity" class="headerlink" title="关闭所有Activity"></a>关闭所有Activity</h2><p>1.创建用来处理Activity的类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">//使用list来保存每一个activity</span></div><div class="line">    <span class="keyword">private</span> List&lt;Activity&gt; mList = <span class="keyword">new</span> LinkedList&lt;Activity&gt;();</div><div class="line"></div><div class="line">    <span class="comment">//为了实现每次使用该类时不创建新的对象而创建的静态对象  </span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> MyApplication instance;</div><div class="line"></div><div class="line">    <span class="comment">//构造方法  </span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">MyApplication</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//实例化一次  </span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> MyApplication <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == instance) &#123;</div><div class="line">            instance = <span class="keyword">new</span> MyApplication();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> instance;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// add Activity    </span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addActivity</span><span class="params">(Activity activity)</span> </span>&#123;</div><div class="line">        mList.add(activity);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//关闭每一个list里的Activity</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exit</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">for</span> (Activity activity : mList) &#123;</div><div class="line">                <span class="keyword">if</span> (activity != <span class="keyword">null</span>)</div><div class="line">                    activity.finish();</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            System.exit(<span class="number">0</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//杀进程  </span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLowMemory</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onLowMemory();</div><div class="line">        System.gc();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.在每个Activity被创建时将该Activity添加到list中去<br><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">MyApplication.getInstance().addActivity(<span class="keyword">this</span>);</div></pre></td></tr></table></figure></p>
<p>3.调用MyApplication的exit方法关闭所有Activity<br><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">MyApplication.getInstance().exit();</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Activity是Android最常用的组件之一，Activity可以用来显示界面，被打开的Activity始终关闭，本文将介绍几种常用的Activity关闭方法。&lt;/p&gt;
&lt;h2 id=&quot;关闭当前Activity&quot;&gt;&lt;a href=&quot;#关闭当前Activity&quot; class=&quot;headerlink&quot; title=&quot;关闭当前Activity&quot;&gt;&lt;/a&gt;关闭当前Activity&lt;/h2&gt;&lt;p&gt;关闭当前Activity的几种方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//关闭当前Activity方法一  &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;finish();  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//关闭当前Activity方法二  &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;android.os.Process.killProcess(android.os.Process.myPid());  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//关闭当前Activity方法三  &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;System.exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//关闭当前Activity方法四  &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.onDestroy();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Android开发" scheme="lns666.me/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="lns666.me/tags/Android/"/>
    
      <category term="开发编程" scheme="lns666.me/tags/%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Activity" scheme="lns666.me/tags/Activity/"/>
    
  </entry>
  
  <entry>
    <title>Android EditText 值得注意的地方(转)</title>
    <link href="lns666.me/blog/17/Android-EditText/"/>
    <id>lns666.me/blog/17/Android-EditText/</id>
    <published>2017-05-24T07:24:52.000Z</published>
    <updated>2017-05-24T08:05:17.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww3.sinaimg.cn/large/006tNbRwgy1ffwh2563h5j30k006st8l.jpg" width="450px"></p>
<p>Android上有很多输入法应用，每种输入法都有各自的特点，输入法多数时候是和EditText配合使用，结合我自己的亲身实践分享一下使用EditText过程中遇到的一些问题及解决方法。<a href="http://www.jianshu.com/p/1f05bb1fde3e" target="_blank" rel="external">原文地址</a></p>
<a id="more"></a>
<h2 id="设置默认输入法"><a href="#设置默认输入法" class="headerlink" title="设置默认输入法"></a>设置默认输入法</h2><p> 有时候为了提高用户体验，在弹出输入法时需要设置默认的输入状态，比如单词应用弹出输入法时，输入法最好是在英文输入状态下。如果是字典应用，弹出输入法时最好是在中文输入状态下，Android并没有提供设置默认的输入状态的接口，但我们可以通过如下方法一样能够达到想要的效果：</p>
<p> 默认中文：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">mEditText.setInputType(EditorInfo.TYPE\_CLASS\_TEXT);</div></pre></td></tr></table></figure>
<p> 默认英文：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">mEditText.setInputType(EditorInfo.TYPE\_TEXT\_VARIATION\_URI);</div></pre></td></tr></table></figure>
<h2 id="打开和关闭输入法"><a href="#打开和关闭输入法" class="headerlink" title="打开和关闭输入法"></a>打开和关闭输入法</h2><p> 手动控制输入法的开关状态也能提升用户体验，比如：</p>
<ul>
<li>有的搜索框会有一个清除按钮，点击清除按钮时就应该弹出输入法，因为用户清除搜索内容的目的多数时候是需要输入新的内容；</li>
<li>执行搜索时应该隐藏输入法，因为显示输入法时会遮挡搜索结果，用户体验不太好；</li>
<li><p>闹钟来时或者有其它window弹出时应该隐藏输入法，因为输入法也是window，如果不隐藏可能导致输入法遮挡住了其它window等用户体验不太友好的问题。</p>
<p>打开输入法：</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(Context context, View editText)</span></span>&#123;</div><div class="line">    InputMethodManager inputMethodManager = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class="line">    inputMethodManager.showSoftInput(editText, <span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 关闭输入法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Context context, View editText)</span></span>&#123;</div><div class="line">    InputMethodManager inputMethodManager = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class="line">    inputMethodManager.hideSoftInputFromWindow(editText.getWindowToken(), <span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="监听EditText的输入状态"><a href="#监听EditText的输入状态" class="headerlink" title="监听EditText的输入状态"></a>监听EditText的输入状态</h2><ul>
<li>类似新浪微博，在输入内容时会提示还可以输入多少字；</li>
<li>有的搜索引擎，输入内容时实时显示搜索结果；</li>
<li><p>有的输入框有输入长度限制，输入内容超过长度限制时弹出提示信息。</p>
<p>上面这些都可以通过监听EditText的输入状态来实现，具体实现方式如下：</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">mInputEditTxt.addTextChangedListener(<span class="keyword">new</span> TextWatcher() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> count, <span class="keyword">int</span> after)</span> </span>&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> before, <span class="keyword">int</span> count)</span> </span>&#123;</div><div class="line">            System.out.println(<span class="string">"监听EditText输入内容的变化，在这里可以监听输入内容的长度。"</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterTextChanged</span><span class="params">(Editable s)</span> </span>&#123;</div><div class="line">            System.out.println(<span class="string">"这里可以实现所输即所得，用户输入的同时可以立即在这里根据输入内容执行操作，显示搜索结果！"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div></pre></td></tr></table></figure>
<h2 id="监听输入法中的回车按钮"><a href="#监听输入法中的回车按钮" class="headerlink" title="监听输入法中的回车按钮"></a>监听输入法中的回车按钮</h2><p> 比如搜狗输入法的右下角有一个回车按钮，我们希望用户点击它时也执行确认功能，可以通过监听EditText的按键点击事件来实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">//监听输入法按键</span></div><div class="line">mInputEditTxt.setOnKeyListener(<span class="keyword">new</span> OnKeyListener() &#123;</div><div class="line">    <span class="meta">@Override</span> </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onKey</span><span class="params">(View v, <span class="keyword">int</span> keyCode, KeyEvent event)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_ENTER &amp;&amp; event.getAction() == KeyEvent.ACTION_UP) &#123;</div><div class="line">            System.out.println(<span class="string">"手指弹起时执行确认功能"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="改变输入法中回车按钮的显示内容"><a href="#改变输入法中回车按钮的显示内容" class="headerlink" title="改变输入法中回车按钮的显示内容"></a>改变输入法中回车按钮的显示内容</h2><p> 如果回车按钮是执行搜索功能，则回车按钮上显示”搜索”，如果是执行发送功能，则显示”发送”,如果是下一步，则显示”下一步”。</p>
<p> 实现这个功能需要调用EditText的setImeOptions方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">*</div><div class="line">* IME_ACTION_SEARCH 搜索</div><div class="line">* IME_ACTION_SEND 发送</div><div class="line">* IME_ACTION_NEXT 下一步</div><div class="line">* IME_ACTION_DONE 完成</div><div class="line">*/</div><div class="line">mInputEditTxt.setImeOptions(EditorInfo.IME_ACTION_SEARCH);</div></pre></td></tr></table></figure>
<h2 id="限制输入内容"><a href="#限制输入内容" class="headerlink" title="限制输入内容"></a>限制输入内容</h2><p> 有时候我们根本就不想用户输入一些杂七杂八的内容，因为这需要程序针对输入的内容做各种处理，如果处理不当还会有好多不可预见的问题，索性在输入内容时就禁止用户输入一些非法字符，这可以通过下面的方式实现，新建一个类InputTxtFilter：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InputTxtFilter</span></span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> INPUT_TYPE_EN = <span class="number">0x01</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> INPUT_TYPE_CH = <span class="number">0x02</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] SPELL = <span class="keyword">new</span> String[]&#123;</div><div class="line">        <span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>,<span class="string">"e"</span>,<span class="string">"f"</span>,<span class="string">"g"</span>,<span class="string">"h"</span>,<span class="string">"i"</span>,<span class="string">"j"</span>,<span class="string">"k"</span>,<span class="string">"l"</span>,<span class="string">"m"</span>,<span class="string">"n"</span>,<span class="string">"o"</span>,<span class="string">"p"</span>,<span class="string">"q"</span>,<span class="string">"r"</span>,<span class="string">"s"</span>,<span class="string">"t"</span>,<span class="string">"u"</span>,<span class="string">"v"</span>,<span class="string">"w"</span>,<span class="string">"x"</span>,<span class="string">"y"</span>,<span class="string">"z"</span>,</div><div class="line">        <span class="string">"ā"</span>,<span class="string">"á"</span>,<span class="string">"ǎ"</span>,<span class="string">"à"</span>,<span class="string">"ō"</span>,<span class="string">"ó"</span>,<span class="string">"ǒ"</span>,<span class="string">"ò"</span>,<span class="string">"ē"</span>,<span class="string">"é"</span>,<span class="string">"ě"</span>,<span class="string">"è"</span>,<span class="string">"ī"</span>,<span class="string">"í"</span>,<span class="string">"ǐ"</span>,<span class="string">"ì"</span>,<span class="string">"ū"</span>,<span class="string">"ú"</span>,<span class="string">"ǔ"</span>,<span class="string">"ù"</span>,<span class="string">"ǖ"</span>,<span class="string">"ǘ"</span>,<span class="string">"ǚ"</span>,<span class="string">"ǜ"</span>,<span class="string">"ü"</span></div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">char</span>[] chineseParam = <span class="keyword">new</span> <span class="keyword">char</span>[]&#123;<span class="string">'」'</span>,<span class="string">'，'</span>,<span class="string">'。'</span>,<span class="string">'？'</span>,<span class="string">'…'</span>,<span class="string">'：'</span>,<span class="string">'～'</span>,<span class="string">'【'</span>,<span class="string">'＃'</span>,<span class="string">'、'</span>,<span class="string">'％'</span>,<span class="string">'＊'</span>,<span class="string">'＆'</span>,<span class="string">'＄'</span>,<span class="string">'（'</span>,<span class="string">'‘'</span>,<span class="string">'’'</span>,<span class="string">'“'</span>,<span class="string">'”'</span>,<span class="string">'『'</span>,<span class="string">'〔'</span>,<span class="string">'｛'</span>,<span class="string">'【'</span></div><div class="line">        ,<span class="string">'￥'</span>,<span class="string">'￡'</span>,<span class="string">'‖'</span>,<span class="string">'〖'</span>,<span class="string">'《'</span>,<span class="string">'「'</span>,<span class="string">'》'</span>,<span class="string">'〗'</span>,<span class="string">'】'</span>,<span class="string">'｝'</span>,<span class="string">'〕'</span>,<span class="string">'』'</span>,<span class="string">'”'</span>,<span class="string">'）'</span>,<span class="string">'！'</span>,<span class="string">'；'</span>,<span class="string">'—'</span>&#125;;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">InputTxtFilter</span><span class="params">( )</span></span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">inputFilter</span><span class="params">( <span class="keyword">final</span> Context context, <span class="keyword">final</span> EditText editText, <span class="keyword">final</span> <span class="keyword">int</span> type, <span class="keyword">final</span> <span class="keyword">int</span> inputLimit)</span></span>&#123;</div><div class="line">        InputFilter[] filters = <span class="keyword">new</span> InputFilter[<span class="number">1</span>];</div><div class="line">        filters[<span class="number">0</span>] = <span class="keyword">new</span> InputFilter.LengthFilter(inputLimit)&#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> CharSequence <span class="title">filter</span><span class="params">(CharSequence source, <span class="keyword">int</span> start, <span class="keyword">int</span> end, Spanned dest, <span class="keyword">int</span> dstart, <span class="keyword">int</span> dend)</span></span>&#123;</div><div class="line">                <span class="keyword">boolean</span> isRightCharater = <span class="keyword">false</span>;</div><div class="line">                <span class="keyword">if</span>(type == INPUT_TYPE_EN)&#123;</div><div class="line">                    isRightCharater = isLetter(source.toString());</div><div class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(type == INPUT_TYPE_CH)&#123;</div><div class="line">                    isRightCharater = isChineseWord(source.toString());</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> ( !isRightCharater|| dest.toString( ).length( )&gt;=inputLimit )&#123;</div><div class="line">                    <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="keyword">return</span> source;</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        editText.setFilters(filters);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//检测String是否全是中文</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isChineseWord</span><span class="params">( String name )</span></span>&#123;</div><div class="line">        <span class="keyword">boolean</span> res=<span class="keyword">true</span>;</div><div class="line">        <span class="keyword">char</span>[] cTemp = name.toCharArray( );</div><div class="line"></div><div class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; name.length( ); i++ )&#123;</div><div class="line">            <span class="keyword">if</span>( !isChinese( cTemp[ i ] ) )&#123;</div><div class="line">                res=<span class="keyword">false</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> res;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//是否为英文字母</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isLetter</span><span class="params">( String inputStr )</span></span>&#123;</div><div class="line">        <span class="keyword">char</span>[] inputArray = inputStr.toCharArray( );</div><div class="line">        List&lt;String&gt; spellList = Arrays.asList( SPELL );</div><div class="line"></div><div class="line">        <span class="keyword">for</span>( <span class="keyword">char</span> input : inputArray )&#123;</div><div class="line">            <span class="keyword">if</span>( !spellList.contains( input + <span class="string">""</span> ) )&#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//判定输入汉字</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isChinese</span><span class="params">( <span class="keyword">char</span> c )</span></span>&#123;</div><div class="line">        <span class="keyword">for</span>( <span class="keyword">char</span> param : chineseParam )&#123;</div><div class="line">            <span class="keyword">if</span>( param == c )&#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        Character.UnicodeBlock ub = Character.UnicodeBlock.of( c );</div><div class="line">        <span class="keyword">if</span> ( ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS</div><div class="line">            || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS</div><div class="line">            || ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</div><div class="line">            || ub == Character.UnicodeBlock.GENERAL_PUNCTUATION</div><div class="line">            || ub == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION</div><div class="line">            || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS )&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 在初始化EditText时，调用InputTxtFilter的inputFilter方法，传入输入长度限制、输入内容的类型限制等即可，eg：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">InputTxtFilter.inputFilter(<span class="keyword">this</span>, mInputEditTxt, InputTxtFilter.INPUT\_TYPE\_EN, <span class="number">5</span>);</div></pre></td></tr></table></figure>
<h2 id="屏蔽EditText的复制、粘贴功能"><a href="#屏蔽EditText的复制、粘贴功能" class="headerlink" title="屏蔽EditText的复制、粘贴功能"></a>屏蔽EditText的复制、粘贴功能</h2><p> 在低版本的Android SDK中，如果对EditText的输入长度有限制时，长按EditText并将选中的内容拖动到EditText输入框中，如果这时候的长度超过了EditText的输入长度限制，程序会直接崩溃掉，在高版本的Android SDK中这个问题已经改了，如果出现上面的情况会直接清空输入框中的内容，为了避免这种讨厌的问题，我们可以屏蔽EditText的复制和粘贴功能，只需要屏蔽EditText的长按响应即可：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">//屏蔽复制、粘贴功能</span></div><div class="line">mInputEditTxt.setCustomSelectionActionModeCallback(<span class="keyword">new</span> ActionMode.Callback() &#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateActionMode</span><span class="params">(ActionMode actionMode, Menu menu)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onPrepareActionMode</span><span class="params">(ActionMode actionMode, Menu menu)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onActionItemClicked</span><span class="params">(ActionMode actionMode, MenuItem menuItem)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroyActionMode</span><span class="params">(ActionMode mode)</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">mInputEditTxt.setLongClickable(<span class="keyword">false</span>);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006tNbRwgy1ffwh2563h5j30k006st8l.jpg&quot; width=&quot;450px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Android上有很多输入法应用，每种输入法都有各自的特点，输入法多数时候是和EditText配合使用，结合我自己的亲身实践分享一下使用EditText过程中遇到的一些问题及解决方法。&lt;a href=&quot;http://www.jianshu.com/p/1f05bb1fde3e&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="lns666.me/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="lns666.me/tags/Android/"/>
    
      <category term="开发编程" scheme="lns666.me/tags/%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="转" scheme="lns666.me/tags/%E8%BD%AC/"/>
    
      <category term="EditText" scheme="lns666.me/tags/EditText/"/>
    
  </entry>
  
  <entry>
    <title>Android Dialog 对话框</title>
    <link href="lns666.me/blog/17/Android-Dialog/"/>
    <id>lns666.me/blog/17/Android-Dialog/</id>
    <published>2017-05-09T15:22:32.000Z</published>
    <updated>2017-05-10T05:19:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww2.sinaimg.cn/large/006tNbRwgy1ffg43248mfj30u00sy0t2.jpg" width="400px"></p>
<p>Android Dialog 即 Android对话框，在Android开发中，我们经常会需要在Android界面上弹出一些对话框，以询问用户或者让用户选择。Android Dialog 一般有五种，分别是：一般对话框，列表对话框，单选按钮对话框，多选对话框，自定义对话框。</p>
<a id="more"></a>
<h2 id="一般对话框"><a href="#一般对话框" class="headerlink" title="一般对话框"></a>一般对话框</h2><p><img src="http://ww4.sinaimg.cn/large/006tNbRwgy1ffg2gl99ipj30u01hcabj.jpg" width="300px"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</div><div class="line">builder.setIcon(R.mipmap.ic_launcher);   <span class="comment">//设置图标</span></div><div class="line">builder.setTitle(<span class="string">"一般对话框"</span>);                    <span class="comment">//设置标题</span></div><div class="line">builder.setMessage(<span class="string">"这是对话框要显示的内容"</span>);       <span class="comment">//设置内容</span></div><div class="line">builder.setCancelable(<span class="keyword">false</span>);           <span class="comment">//将对话框以外的区域设置成无法点击</span></div><div class="line"></div><div class="line"><span class="comment">//确认按钮监听事件</span></div><div class="line">builder.setPositiveButton(<span class="string">"确认"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line"></div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"点击了 确定"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        dialog.dismiss();      <span class="comment">//取消显示(关闭)对话框</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//忽略按钮监听事件</span></div><div class="line">builder.setNegativeButton(<span class="string">"取消"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line"></div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"点击了 取消"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        dialog.dismiss();      <span class="comment">//取消显示(关闭)对话框</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">builder.create().show();         <span class="comment">//创建并显示对话框</span></div></pre></td></tr></table></figure>
<h2 id="列表对话框"><a href="#列表对话框" class="headerlink" title="列表对话框"></a>列表对话框</h2><p><img src="http://ww1.sinaimg.cn/large/006tNbRwgy1ffg2oug9x4j30u01hcabb.jpg" width="300px"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">final</span> String item[] = &#123;<span class="string">"第一项"</span>, <span class="string">"第二项"</span>, <span class="string">"第三项"</span>&#125;;     <span class="comment">//设置列表内容</span></div><div class="line"></div><div class="line">AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</div><div class="line">builder.setIcon(R.mipmap.ic_launcher);   <span class="comment">//设置图标</span></div><div class="line">builder.setTitle(<span class="string">"列表对话框"</span>);           <span class="comment">//设置标题</span></div><div class="line">builder.setCancelable(<span class="keyword">false</span>);           <span class="comment">//将对话框以外的区域设置成无法点击</span></div><div class="line"></div><div class="line"><span class="comment">//列表项监听事件</span></div><div class="line">builder.setItems(item, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line"></div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"点击了 "</span> + item[which], Toast.LENGTH_SHORT).show();</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">builder.create().show();         <span class="comment">//创建并显示对话框</span></div></pre></td></tr></table></figure>
<h2 id="单选按钮对话框"><a href="#单选按钮对话框" class="headerlink" title="单选按钮对话框"></a>单选按钮对话框</h2><p><img src="http://ww3.sinaimg.cn/large/006tNbRwgy1ffg2pywg99j30u01hc75t.jpg" width="300px"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">final</span> String item[] = &#123;<span class="string">"第一项"</span>, <span class="string">"第二项"</span>, <span class="string">"第三项"</span>&#125;;     <span class="comment">//设置列表内容</span></div><div class="line"></div><div class="line">AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</div><div class="line">builder.setIcon(R.mipmap.ic_launcher);   <span class="comment">//设置图标</span></div><div class="line">builder.setTitle(<span class="string">"单选按钮对话框"</span>);           <span class="comment">//设置标题</span></div><div class="line">builder.setCancelable(<span class="keyword">false</span>);           <span class="comment">//将对话框以外的区域设置成无法点击</span></div><div class="line"></div><div class="line"><span class="comment">//单选按钮监听事件,item列表内容,select为默认选中的数组编号</span></div><div class="line">builder.setSingleChoiceItems(item, select, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line"></div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"选择了 "</span> + item[which], Toast.LENGTH_SHORT).show();</div><div class="line">        select = which;        <span class="comment">//更新默认选中</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 设置确认按钮</span></div><div class="line">builder.setPositiveButton(<span class="string">"确定"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line"></div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"确定"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        dialog.dismiss();      <span class="comment">//取消显示(关闭)对话框</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">builder.create().show();         <span class="comment">//创建并显示对话框</span></div></pre></td></tr></table></figure>
<h2 id="多选对话框"><a href="#多选对话框" class="headerlink" title="多选对话框"></a>多选对话框</h2><p><img src="http://ww1.sinaimg.cn/large/006tNbRwgy1ffg2rk4ei1j30u01hcgn5.jpg" width="300px"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">final</span> String item[] = &#123;<span class="string">"第一项"</span>, <span class="string">"第二项"</span>, <span class="string">"第三项"</span>&#125;;     <span class="comment">//设置列表内容</span></div><div class="line"></div><div class="line">AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</div><div class="line">builder.setIcon(R.mipmap.ic_launcher);   <span class="comment">//设置图标</span></div><div class="line">builder.setTitle(<span class="string">"多选对话框"</span>);           <span class="comment">//设置标题</span></div><div class="line">builder.setCancelable(<span class="keyword">false</span>);           <span class="comment">//将对话框以外的区域设置成无法点击</span></div><div class="line"></div><div class="line"><span class="comment">//多选对话监听事件,item列表内容,selected设置默认选中</span></div><div class="line">builder.setMultiChoiceItems(item, selected, <span class="keyword">new</span> DialogInterface.OnMultiChoiceClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which, <span class="keyword">boolean</span> isChecked)</span> </span>&#123;</div><div class="line"></div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, item[which] + isChecked, Toast.LENGTH_SHORT).show();</div><div class="line">        selected[which] = isChecked;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 设置确认按钮</span></div><div class="line">builder.setPositiveButton(<span class="string">"确定"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line"></div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"确定"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        dialog.dismiss();      <span class="comment">//取消显示(关闭)对话框</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">builder.create().show();         <span class="comment">//创建并显示对话框</span></div></pre></td></tr></table></figure>
<h2 id="自定义对话框"><a href="#自定义对话框" class="headerlink" title="自定义对话框"></a>自定义对话框</h2><p><img src="http://ww4.sinaimg.cn/large/006tNbRwgy1ffg2uavcctj30u01hcmyf.jpg" width="300px"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);  <span class="comment">//先得到构造器</span></div><div class="line">builder.setIcon(R.mipmap.ic_launcher);   <span class="comment">//设置图标</span></div><div class="line">builder.setTitle(<span class="string">"自定义对话框"</span>);           <span class="comment">//设置标题</span></div><div class="line">builder.setCancelable(<span class="keyword">false</span>);           <span class="comment">//将对话框以外的区域设置成无法点击</span></div><div class="line"></div><div class="line"><span class="comment">// 载入自定义布局</span></div><div class="line">LayoutInflater inflater = getLayoutInflater();</div><div class="line">View layout = inflater.inflate(R.layout.dialog, <span class="keyword">null</span>);</div><div class="line">builder.setView(layout);</div><div class="line"></div><div class="line"><span class="comment">// 对布局中的控件监听</span></div><div class="line"><span class="keyword">final</span> EditText editText_name = (EditText) layout.findViewById(R.id.editText_name);</div><div class="line"><span class="keyword">final</span> EditText editText_password = (EditText) layout.findViewById(R.id.editText_password);</div><div class="line"></div><div class="line"><span class="comment">// 输入框监听事件</span></div><div class="line">editText_name.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line"></div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"点击了账号输入框"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 输入框监听事件</span></div><div class="line">editText_password.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line"></div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"点击了密码输入框"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 设置确认按钮</span></div><div class="line">builder.setPositiveButton(<span class="string">"确定"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line"></div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"账号"</span> + editText_name.getText().toString() + <span class="string">"\n密码"</span> + editText_password.getText().toString(), Toast.LENGTH_SHORT).show();</div><div class="line">        dialog.dismiss();      <span class="comment">//取消显示(关闭)对话框</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">builder.create().show();         <span class="comment">//创建并显示对话框</span></div></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上便是 Android Dialog 用法的简介，还是很简单的，源码请戳下方链接。<br><a href="https://github.com/liangnaisong/AndroidDialog" target="_blank" rel="external">https://github.com/liangnaisong/AndroidDialog</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/006tNbRwgy1ffg43248mfj30u00sy0t2.jpg&quot; width=&quot;400px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Android Dialog 即 Android对话框，在Android开发中，我们经常会需要在Android界面上弹出一些对话框，以询问用户或者让用户选择。Android Dialog 一般有五种，分别是：一般对话框，列表对话框，单选按钮对话框，多选对话框，自定义对话框。&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="lns666.me/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="lns666.me/tags/Android/"/>
    
      <category term="开发编程" scheme="lns666.me/tags/%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Dialog" scheme="lns666.me/tags/Dialog/"/>
    
  </entry>
  
  <entry>
    <title>Android CountDownTimer 倒计时</title>
    <link href="lns666.me/blog/17/Android-CountDownTimer/"/>
    <id>lns666.me/blog/17/Android-CountDownTimer/</id>
    <published>2017-02-12T14:20:32.000Z</published>
    <updated>2017-05-25T09:32:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>在Android开发中，我们会常常需要使用倒计时，比如在发送短信验证码时的60秒等待，我们可以通过CountDownTimer来简单的实现倒计时的功能。</p>
<p><img src="https://ww4.sinaimg.cn/large/006y8lVagy1fcnz0ihdeej30u00k0dgt.jpg" width="400px"></p>
<a id="more"></a>
<p><img src="https://ww3.sinaimg.cn/large/006y8lVagy1fcnz0eemguj30u00k0q3w.jpg" width="400px"></p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 60秒倒计时示例</div><div class="line"> */</div><div class="line"> <span class="keyword">new</span> CountDownTimer(<span class="number">60000</span>, <span class="number">1000</span>) &#123;</div><div class="line"></div><div class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTick</span><span class="params">(<span class="keyword">long</span> millisUntilFinished)</span> </span>&#123;</div><div class="line">         mTextField.setText(<span class="string">"seconds remaining: "</span> + millisUntilFinished / <span class="number">1000</span>);</div><div class="line">     &#125;</div><div class="line"></div><div class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFinish</span><span class="params">()</span> </span>&#123;</div><div class="line">         mTextField.setText(<span class="string">"done!"</span>);</div><div class="line">     &#125;</div><div class="line">  &#125;.start();</div></pre></td></tr></table></figure>
<p>CountDownTimer每隔1秒就会调用一次onTick()方法，在倒计时结束时会调用onFinish()方法，如此我们便可以通过它简单实现倒计时功能啦。</p>
<h2 id="公共构造函数"><a href="#公共构造函数" class="headerlink" title="公共构造函数"></a>公共构造函数</h2><p>CountDownTimer(long millisInFuture, long countDownInterval)</p>
<p><code>millisInFuture</code> 倒计时总时间 ms</p>
<p><code>countDownInterval</code> 倒计时间隔时间 ms</p>
<h2 id="公共方法"><a href="#公共方法" class="headerlink" title="公共方法"></a>公共方法</h2><p><code>cancel()</code> 取消倒计时</p>
<p><code>onFinish()</code> 倒计时结束回调</p>
<p><code>onTick(long millisUntilFinished)</code> 到达间隔时间的定期回调</p>
<p><code>start()</code> 开始倒计时</p>
<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p>代码比较简单，可以下载Dome查看<br><a href="https://github.com/liangnaisong/Countdown" target="_blank" rel="external">https://github.com/liangnaisong/Countdown</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Android开发中，我们会常常需要使用倒计时，比如在发送短信验证码时的60秒等待，我们可以通过CountDownTimer来简单的实现倒计时的功能。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ww4.sinaimg.cn/large/006y8lVagy1fcnz0ihdeej30u00k0dgt.jpg&quot; width=&quot;400px&quot;/&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="lns666.me/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="lns666.me/tags/Android/"/>
    
      <category term="开发编程" scheme="lns666.me/tags/%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="倒计时" scheme="lns666.me/tags/%E5%80%92%E8%AE%A1%E6%97%B6/"/>
    
  </entry>
  
  <entry>
    <title>Android自定义标题栏</title>
    <link href="lns666.me/blog/17/Android-TitleBar/"/>
    <id>lns666.me/blog/17/Android-TitleBar/</id>
    <published>2017-02-10T04:10:30.000Z</published>
    <updated>2017-05-25T09:33:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ww3.sinaimg.cn/large/006tNc79gy1fcmg3a61tqj30u00hhq33.jpg" width="400px"><br>在Android开发中，我们常常需要在标题栏中增加返回按钮和提交按钮，并将标题文字居中这就需要自定义标题栏。</p>
<a id="more"></a>
<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p>代码比较简单，可以下载Dome查看<br><a href="https://github.com/liangnaisong/TitleBar" target="_blank" rel="external">https://github.com/liangnaisong/TitleBar</a></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">//设置标题名称</span></div><div class="line">setTitle(<span class="string">"标题"</span>);</div><div class="line"><span class="comment">//设置返回按钮并显示</span></div><div class="line">showBackwardView(R.string.text_back,<span class="keyword">true</span>);</div><div class="line"><span class="comment">//设置提交按钮并显示</span></div><div class="line">showForwardView(R.string.text_forward, <span class="keyword">true</span>);</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 重写点击返回按钮操作,返回按钮点击后触发</div><div class="line"> * <span class="doctag">@param</span> backwardView</div><div class="line"> */</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onBackward</span><span class="params">(View backwardView)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onBackward(backwardView);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 重写点击提交按钮操作,提交按钮点击后触发</div><div class="line"> * <span class="doctag">@param</span> forwardView</div><div class="line"> */</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onForward</span><span class="params">(View forwardView)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onForward(forwardView);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ww3.sinaimg.cn/large/006tNc79gy1fcmg3a61tqj30u00hhq33.jpg&quot; width=&quot;400px&quot;/&gt;&lt;br&gt;在Android开发中，我们常常需要在标题栏中增加返回按钮和提交按钮，并将标题文字居中这就需要自定义标题栏。&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="lns666.me/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="lns666.me/tags/Android/"/>
    
      <category term="开发编程" scheme="lns666.me/tags/%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="界面美化" scheme="lns666.me/tags/%E7%95%8C%E9%9D%A2%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio Git 忽略文件(转)</title>
    <link href="lns666.me/blog/17/Android-git/"/>
    <id>lns666.me/blog/17/Android-git/</id>
    <published>2017-02-10T02:17:33.000Z</published>
    <updated>2017-05-26T00:40:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过git同步代码时，有些代码或文件不希望推送到版本库中，可以忽略该文件再上传，下面是Android Studio可忽略文件列表。<a href="https://github.com/github/gitignore/blob/master/Android.gitignore" target="_blank" rel="external">原文地址</a></p>
<a id="more"></a>
<h1 id="Built-application-files"><a href="#Built-application-files" class="headerlink" title="Built application files"></a>Built application files</h1><p><code>*.apk</code><br><code>*.ap_</code></p>
<h1 id="Files-for-the-ART-Dalvik-VM"><a href="#Files-for-the-ART-Dalvik-VM" class="headerlink" title="Files for the ART/Dalvik VM"></a>Files for the ART/Dalvik VM</h1><p><code>*.dex</code></p>
<h1 id="Java-class-files"><a href="#Java-class-files" class="headerlink" title="Java class files"></a>Java class files</h1><p><code>*.class</code></p>
<h1 id="Generated-files"><a href="#Generated-files" class="headerlink" title="Generated files"></a>Generated files</h1><p><code>bin/</code><br><code>gen/</code><br><code>out/</code></p>
<h1 id="Gradle-files"><a href="#Gradle-files" class="headerlink" title="Gradle files"></a>Gradle files</h1><p><code>.gradle/</code><br><code>build/</code></p>
<h1 id="Local-configuration-file-sdk-path-etc"><a href="#Local-configuration-file-sdk-path-etc" class="headerlink" title="Local configuration file (sdk path, etc)"></a>Local configuration file (sdk path, etc)</h1><p><code>local.properties</code></p>
<h1 id="Proguard-folder-generated-by-Eclipse"><a href="#Proguard-folder-generated-by-Eclipse" class="headerlink" title="Proguard folder generated by Eclipse"></a>Proguard folder generated by Eclipse</h1><p><code>proguard/</code></p>
<h1 id="Log-Files"><a href="#Log-Files" class="headerlink" title="Log Files"></a>Log Files</h1><p><code>*.log</code></p>
<h1 id="Android-Studio-Navigation-editor-temp-files"><a href="#Android-Studio-Navigation-editor-temp-files" class="headerlink" title="Android Studio Navigation editor temp files"></a>Android Studio Navigation editor temp files</h1><p><code>.navigation/</code></p>
<h1 id="Android-Studio-captures-folder"><a href="#Android-Studio-captures-folder" class="headerlink" title="Android Studio captures folder"></a>Android Studio captures folder</h1><p><code>captures/</code></p>
<h1 id="Intellij"><a href="#Intellij" class="headerlink" title="Intellij"></a>Intellij</h1><p><code>*.iml</code><br><code>.idea/workspace.xml</code><br><code>.idea/tasks.xml</code><br><code>.idea/gradle.xml</code><br><code>.idea/libraries</code></p>
<h1 id="Keystore-files"><a href="#Keystore-files" class="headerlink" title="Keystore files"></a>Keystore files</h1><p><code>*.jks</code></p>
<h1 id="External-native-build-folder-generated-in-Android-Studio-2-2-and-later"><a href="#External-native-build-folder-generated-in-Android-Studio-2-2-and-later" class="headerlink" title="External native build folder generated in Android Studio 2.2 and later"></a>External native build folder generated in Android Studio 2.2 and later</h1><p><code>.externalNativeBuild</code></p>
<h1 id="Google-Services-e-g-APIs-or-Firebase"><a href="#Google-Services-e-g-APIs-or-Firebase" class="headerlink" title="Google Services (e.g. APIs or Firebase)"></a>Google Services (e.g. APIs or Firebase)</h1><p><code>google-services.json</code></p>
<h1 id="Freeline"><a href="#Freeline" class="headerlink" title="Freeline"></a>Freeline</h1><p><code>freeline.py</code><br><code>freeline/</code><br><code>freeline_project_description.json</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过git同步代码时，有些代码或文件不希望推送到版本库中，可以忽略该文件再上传，下面是Android Studio可忽略文件列表。&lt;a href=&quot;https://github.com/github/gitignore/blob/master/Android.gitignore&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="lns666.me/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="开发编程" scheme="lns666.me/tags/%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Android Studio" scheme="lns666.me/tags/Android-Studio/"/>
    
      <category term="git" scheme="lns666.me/tags/git/"/>
    
      <category term="转" scheme="lns666.me/tags/%E8%BD%AC/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="lns666.me/blog/16/hello-world/"/>
    <id>lns666.me/blog/16/hello-world/</id>
    <published>2016-11-29T04:41:03.000Z</published>
    <updated>2016-11-29T04:41:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Clean-static-files"><a href="#Clean-static-files" class="headerlink" title="Clean static files"></a>Clean static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo clean</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/clean.html" target="_blank" rel="external">Clean</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用Xcode写C语言程序</title>
    <link href="lns666.me/blog/16/xcode-write-c/"/>
    <id>lns666.me/blog/16/xcode-write-c/</id>
    <published>2016-11-05T00:20:18.000Z</published>
    <updated>2017-05-25T09:32:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww4.sinaimg.cn/large/006y8lVagw1fa99edxj4wj30m808wmxi.jpg" alt="">在MacOS上写C语言程序Xcode是一个不错的选择，那么如何使用Xcode写C语言程序呢?</p>
<a id="more"></a>
<p>1.打开Xcode，可以看到Welcome to Xcode界面，选择Create a new Xcode Project新建一个项目。<br><img src="http://ww2.sinaimg.cn/large/006y8lVagw1fa935e6qe4j30qt0p8tbb.jpg" width="500px"></p>
<p>2.在上边的归类中选择MacOS，在Application分类中选择Command Line Tool，然后进入下一步。<br><img src="http://ww4.sinaimg.cn/large/006y8lVagw1fa935ecphkj314k0ssn12.jpg" width="600px"></p>
<p>3.输入项目名等信息，记得将Language选择为C，下一步,选择存放的目录。<br><img src="http://ww4.sinaimg.cn/large/006y8lVagw1fa935ei6njj314k0ssjtq.jpg" width="600px"></p>
<p>4.看到了熟悉的代码界面，可以开心的敲代码咯。<br><img src="http://ww4.sinaimg.cn/large/006y8lVagw1fa935e2rrzj31kw0v90xc.jpg" width="600px"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/006y8lVagw1fa99edxj4wj30m808wmxi.jpg&quot; alt=&quot;&quot;&gt;在MacOS上写C语言程序Xcode是一个不错的选择，那么如何使用Xcode写C语言程序呢?&lt;/p&gt;
    
    </summary>
    
      <category term="C语言" scheme="lns666.me/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="开发编程" scheme="lns666.me/tags/%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="技巧" scheme="lns666.me/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="C语言" scheme="lns666.me/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Xcode" scheme="lns666.me/tags/Xcode/"/>
    
      <category term="MacOS" scheme="lns666.me/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>BroadcastReceiver广播接收器的简单用法</title>
    <link href="lns666.me/blog/16/Android-BroadcastReceiver/"/>
    <id>lns666.me/blog/16/Android-BroadcastReceiver/</id>
    <published>2016-11-02T16:07:23.000Z</published>
    <updated>2017-05-26T00:36:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="BroadcastReceiver简介"><a href="#BroadcastReceiver简介" class="headerlink" title="BroadcastReceiver简介"></a>BroadcastReceiver简介</h2><p>BroadcastReceiver作为Android四大组件之一，是一种广泛运用在应用程序之间传输信息的机制，没有界面。</p>
<p>BroadcastReceiver包括两个概念，广播发送者和广播接收者(Receiver)，这里的广播实际就是指Intent，程序可以自己发送广播自己接收，也可以接受系统或其他应用的广播或是发送广播给其他应用程序。</p>
<p>我们的应用可以使用它对外部事件进行过滤只对感兴趣的外部事件进行接收并做出响应。例如当WIFI断开时，应当停止下载任务，以节省流量。</p>
<a id="more"></a>
<h2 id="BroadcastReceiver简单用法"><a href="#BroadcastReceiver简单用法" class="headerlink" title="BroadcastReceiver简单用法"></a>BroadcastReceiver简单用法</h2><p>首先在需要发送信息的地方，把要发送的信息和用于过滤的信息(如Action、Category)装入一个Intent对象 ，然后通过调用 sendOrderBroadcast()或sendStickyBroadcast()方法，把 Intent对象以广播方式发送出去。<br><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// 发送广播</span></div><div class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="string">"android.intent.action.CART_BROADCAST"</span>);</div><div class="line">LocalBroadcastManager.getInstance(getActivity()).sendBroadcast(intent);</div></pre></td></tr></table></figure></p>
<p>当Intent发送以后，所有已经注册的BroadcastReceiver会检查注册时的IntentFilter是否与发送的Intent相匹配，若匹配则就会调用BroadcastReceiver的onReceive()方法。所以当我们定义一个BroadcastReceiver的时候，都需要实现onReceive()方法。<br><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// 广播接收器声明变量</span></div><div class="line"><span class="keyword">private</span> LocalBroadcastManager broadcastManager;</div><div class="line"><span class="keyword">private</span> IntentFilter intentFilter;</div><div class="line"><span class="keyword">private</span> BroadcastReceiver mReceiver;</div><div class="line"></div><div class="line"><span class="comment">// 广播注册,可以写在Activity（onCreate）,也可以写在Fragment（onActivityCreated）里。</span></div><div class="line">broadcastManager = LocalBroadcastManager.getInstance(getActivity());</div><div class="line">intentFilter = <span class="keyword">new</span> IntentFilter();</div><div class="line">intentFilter.addAction(<span class="string">"android.intent.action.CART_BROADCAST"</span>);  <span class="comment">//过滤器</span></div><div class="line">mReceiver = <span class="keyword">new</span> BroadcastReceiver() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span></span>&#123;</div><div class="line">                <span class="comment">//收到广播后所作的操作</span></div><div class="line">            &#125;</div><div class="line"> &#125;;</div><div class="line"> broadcastManager.registerReceiver(mReceiver, intentFilter);</div><div class="line"></div><div class="line"><span class="comment">// 和正常广播一样,也要在对应的生命周期中反注册掉</span></div><div class="line"><span class="meta">@Override</span>  </div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;  </div><div class="line">   <span class="keyword">super</span>.onDestroy();  </div><div class="line">   broadcastManager.unregisterReceiver(mReceiver);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>本文简单阐述了的用法，如果想了解更多可以查看<a href="https://developer.android.com/reference/android/content/BroadcastReceiver.html" target="_blank" rel="external">官方文档</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;BroadcastReceiver简介&quot;&gt;&lt;a href=&quot;#BroadcastReceiver简介&quot; class=&quot;headerlink&quot; title=&quot;BroadcastReceiver简介&quot;&gt;&lt;/a&gt;BroadcastReceiver简介&lt;/h2&gt;&lt;p&gt;BroadcastReceiver作为Android四大组件之一，是一种广泛运用在应用程序之间传输信息的机制，没有界面。&lt;/p&gt;
&lt;p&gt;BroadcastReceiver包括两个概念，广播发送者和广播接收者(Receiver)，这里的广播实际就是指Intent，程序可以自己发送广播自己接收，也可以接受系统或其他应用的广播或是发送广播给其他应用程序。&lt;/p&gt;
&lt;p&gt;我们的应用可以使用它对外部事件进行过滤只对感兴趣的外部事件进行接收并做出响应。例如当WIFI断开时，应当停止下载任务，以节省流量。&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="lns666.me/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="lns666.me/tags/Android/"/>
    
      <category term="BroadcastReceiver" scheme="lns666.me/tags/BroadcastReceiver/"/>
    
      <category term="开发编程" scheme="lns666.me/tags/%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio Log 分段输出</title>
    <link href="lns666.me/blog/16/Android-Segmentation-Log/"/>
    <id>lns666.me/blog/16/Android-Segmentation-Log/</id>
    <published>2016-11-02T15:57:53.000Z</published>
    <updated>2017-05-25T09:30:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么要分段输出"><a href="#为什么要分段输出" class="headerlink" title="为什么要分段输出?"></a>为什么要分段输出?</h2><p>AndroidStudio对Log输出的长度进行了限制，Log最大只能输出1024x4个字符，超出的就无法显示了，因此，我们可以将Log分成长度不超过1024x4的若干个小段，以实现完整的Log输出。</p>
<h2 id="分段输出的方法"><a href="#分段输出的方法" class="headerlink" title="分段输出的方法"></a>分段输出的方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// Log分段输出</span></div><div class="line">String mString = <span class="string">"需要分段输出的内容"</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (mString.length() &gt; <span class="number">4000</span>) &#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mString.length(); i += <span class="number">4000</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (i + <span class="number">4000</span> &lt; mString.length()) &#123;</div><div class="line">            Log.i(TAG + i, mString.substring(i, i + <span class="number">4000</span>));</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            Log.i(TAG + i, mString.substring(i, mString.length()));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    Log.i(TAG, mString);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>如果使用了以上方法依然无法完整输出，可以试着将4000改成2000，这样就可以完整输出了。这是为什么呢?我猜测是中文占两个字符的问题，使用.length()计算长度时一个中文只占一个长度，而Log输出时一个中文占2个字符。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么要分段输出&quot;&gt;&lt;a href=&quot;#为什么要分段输出&quot; class=&quot;headerlink&quot; title=&quot;为什么要分段输出?&quot;&gt;&lt;/a&gt;为什么要分段输出?&lt;/h2&gt;&lt;p&gt;AndroidStudio对Log输出的长度进行了限制，Log最大只能输出1024x4个字符，超出的就无法显示了，因此，我们可以将Log分成长度不超过1024x4的若干个小段，以实现完整的Log输出。&lt;/p&gt;
&lt;h2 id=&quot;分段输出的方法&quot;&gt;&lt;a href=&quot;#分段输出的方法&quot; class=&quot;headerlink&quot; title=&quot;分段输出的方法&quot;&gt;&lt;/a&gt;分段输出的方法&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Log分段输出&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String mString = &lt;span class=&quot;string&quot;&gt;&quot;需要分段输出的内容&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mString.length() &amp;gt; &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mString.length(); i += &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i + &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt; &amp;lt; mString.length()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Log.i(TAG + i, mString.substring(i, i + &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Log.i(TAG + i, mString.substring(i, mString.length()));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Log.i(TAG, mString);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Android开发" scheme="lns666.me/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="lns666.me/tags/Android/"/>
    
      <category term="开发编程" scheme="lns666.me/tags/%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Android Studio" scheme="lns666.me/tags/Android-Studio/"/>
    
      <category term="技巧" scheme="lns666.me/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio获取SHA1和MD5超简单的方法</title>
    <link href="lns666.me/blog/16/Android-sha1-md5/"/>
    <id>lns666.me/blog/16/Android-sha1-md5/</id>
    <published>2016-10-30T02:17:53.000Z</published>
    <updated>2017-05-25T09:30:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="超简单的方法"><a href="#超简单的方法" class="headerlink" title="超简单的方法"></a>超简单的方法</h2><p>在Android开发的过程中经常要查看项目的SHA1或MD5码，通过图示的方法可以方便的查看SHA1和MD5，超简单，有木有!!!<br><img src="http://ww1.sinaimg.cn/large/006y8mN6gw1f9iayk7krcj31kw0zkwm7.jpg" alt=""></p>
<a id="more"></a>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>在 Android Studio 2.2版本以后，按照上图的方法操作后得到的却是下图这个界面，看不到的SHA1和MD5，怎么办怎么办?<br><img src="http://ww2.sinaimg.cn/large/006y8mN6gw1f9iayjy8t5j30yg08qtb1.jpg" alt=""></p>
<p>别担心，这时候我们点击一下这个小按钮，还是熟悉的味道，还是熟悉的感觉。<br><img src="http://ww1.sinaimg.cn/large/006y8mN6gw1f9iayjxpb5j31kw0edadq.jpg" alt=""></p>
<h2 id="顺便吐槽一下网上的方法"><a href="#顺便吐槽一下网上的方法" class="headerlink" title="顺便吐槽一下网上的方法"></a>顺便吐槽一下网上的方法</h2><p><img src="http://ww2.sinaimg.cn/large/006y8mN6gw1f9iayj67osj31710evjug.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;超简单的方法&quot;&gt;&lt;a href=&quot;#超简单的方法&quot; class=&quot;headerlink&quot; title=&quot;超简单的方法&quot;&gt;&lt;/a&gt;超简单的方法&lt;/h2&gt;&lt;p&gt;在Android开发的过程中经常要查看项目的SHA1或MD5码，通过图示的方法可以方便的查看SHA1和MD5，超简单，有木有!!!&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006y8mN6gw1f9iayk7krcj31kw0zkwm7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="lns666.me/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="lns666.me/tags/Android/"/>
    
      <category term="开发编程" scheme="lns666.me/tags/%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Android Studio" scheme="lns666.me/tags/Android-Studio/"/>
    
      <category term="技巧" scheme="lns666.me/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Android 进度条</title>
    <link href="lns666.me/blog/16/Android-ProgressDialog/"/>
    <id>lns666.me/blog/16/Android-ProgressDialog/</id>
    <published>2016-10-26T11:27:53.000Z</published>
    <updated>2017-02-11T05:29:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>Android 默认进度条样式的简单使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">//声明进度条对象</span></div><div class="line"><span class="keyword">private</span> ProgressDialog pd;</div><div class="line"></div><div class="line"><span class="comment">//显示进度条的方法</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loading</span><span class="params">(String s)</span> </span>&#123;</div><div class="line">	pd = <span class="keyword">new</span> ProgressDialog(LoginActivity.<span class="keyword">this</span>);	<span class="comment">//上下文对象</span></div><div class="line">	pd.setMessage(s);	<span class="comment">//要显示的文字</span></div><div class="line">	pd.setCanceledOnTouchOutside(<span class="keyword">false</span>);	<span class="comment">//不能通过触屏屏幕空白处取消进度条</span></div><div class="line">	pd.show();		<span class="comment">//显示进度条</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//调用方法显示进度条(在开始等待的地方使用)</span></div><div class="line">loading(<span class="string">"加载中.."</span>);</div><div class="line"></div><div class="line"><span class="comment">//取消显示进度条(在结束等待的地方使用)</span></div><div class="line">pd.dismiss();</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="显示效果"><a href="#显示效果" class="headerlink" title="显示效果"></a>显示效果</h2><p><img src="http://ww2.sinaimg.cn/large/006y8mN6gw1fa8rcz29f1g30gg0su77m.gif" width="300px"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用说明&quot;&gt;&lt;a href=&quot;#使用说明&quot; class=&quot;headerlink&quot; title=&quot;使用说明&quot;&gt;&lt;/a&gt;使用说明&lt;/h2&gt;&lt;p&gt;Android 默认进度条样式的简单使用&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//声明进度条对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ProgressDialog pd;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//显示进度条的方法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;loading&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	pd = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ProgressDialog(LoginActivity.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);	&lt;span class=&quot;comment&quot;&gt;//上下文对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	pd.setMessage(s);	&lt;span class=&quot;comment&quot;&gt;//要显示的文字&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	pd.setCanceledOnTouchOutside(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);	&lt;span class=&quot;comment&quot;&gt;//不能通过触屏屏幕空白处取消进度条&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	pd.show();		&lt;span class=&quot;comment&quot;&gt;//显示进度条&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//调用方法显示进度条(在开始等待的地方使用)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;loading(&lt;span class=&quot;string&quot;&gt;&quot;加载中..&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//取消显示进度条(在结束等待的地方使用)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pd.dismiss();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Android开发" scheme="lns666.me/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="lns666.me/tags/Android/"/>
    
      <category term="开发编程" scheme="lns666.me/tags/%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Application 保存全局变量</title>
    <link href="lns666.me/blog/16/Android-application/"/>
    <id>lns666.me/blog/16/Android-application/</id>
    <published>2016-10-25T15:57:33.000Z</published>
    <updated>2017-02-11T05:29:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>简单介绍 Android 中使用 Application 保存全局变量的方法</strong></p>
<h3 id="1-定义Data类继承Application"><a href="#1-定义Data类继承Application" class="headerlink" title="1.定义Data类继承Application"></a>1.定义Data类继承Application</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> android.app.Application;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Data</span> <span class="keyword">extends</span> <span class="title">Application</span></span>&#123;</div><div class="line">	<span class="keyword">private</span> String b;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getB</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.b;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setB</span><span class="params">(String c)</span></span>&#123;</div><div class="line">		<span class="keyword">this</span>.b= c;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span></span>&#123;</div><div class="line">		b = <span class="string">"b"</span>;</div><div class="line">		<span class="keyword">super</span>.onCreate();</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="2-在manifest-xml中声明application"><a href="#2-在manifest-xml中声明application" class="headerlink" title="2.在manifest.xml中声明application"></a>2.在manifest.xml中声明application</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">android:name=<span class="string">"com.test.Data"</span></div></pre></td></tr></table></figure>
<h3 id="3-使用"><a href="#3-使用" class="headerlink" title="3.使用"></a>3.使用</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">final</span> Data data = (Data)getApplication(); </div><div class="line"></div><div class="line">data.setB(<span class="string">"hello"</span>);</div><div class="line">txtview.setText(data.getB());</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;简单介绍 Android 中使用 Application 保存全局变量的方法&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-定义Data类继承Application&quot;&gt;&lt;a href=&quot;#1-定义Data类继承Application&quot; class=&quot;headerlink&quot; title=&quot;1.定义Data类继承Application&quot;&gt;&lt;/a&gt;1.定义Data类继承Application&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.app.Application;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Data&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Application&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String b;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getB&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.b;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setB&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String c)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.b= c;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		b = &lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Android开发" scheme="lns666.me/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="lns666.me/tags/Android/"/>
    
      <category term="开发编程" scheme="lns666.me/tags/%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>一些软件的汉化教程</title>
    <link href="lns666.me/blog/16/app-chinese-localization/"/>
    <id>lns666.me/blog/16/app-chinese-localization/</id>
    <published>2016-10-22T14:17:13.000Z</published>
    <updated>2017-05-25T09:31:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Navicat-Premium-for-Mac-11-2-13"><a href="#Navicat-Premium-for-Mac-11-2-13" class="headerlink" title="Navicat Premium for Mac 11.2.13"></a>Navicat Premium for Mac 11.2.13</h2><p><a href="http://dl.download.csdn.net/down11/20160414/d2e77ceae41a1ce34238a41c92b20eaa.zip?response-content-disposition=attachment%3Bfilename%3D%22zh-Hans.lproj.zip%22&amp;OSSAccessKeyId=9q6nvzoJGowBj4q1&amp;Expires=1476279425&amp;Signature=fz1IZOBLQ5AK2T9yraJ9nzigcZo%3D" target="_blank" rel="external">下载后</a>，解压，拖入，app右键显示包内内容/Contents/Resources 即可。</p>
<h2 id="Sketch41"><a href="#Sketch41" class="headerlink" title="Sketch41"></a>Sketch41</h2><p><a href="https://github.com/cute/SketchI18N" target="_blank" rel="external">https://github.com/cute/SketchI18N</a></p>
<a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Navicat-Premium-for-Mac-11-2-13&quot;&gt;&lt;a href=&quot;#Navicat-Premium-for-Mac-11-2-13&quot; class=&quot;headerlink&quot; title=&quot;Navicat Premium for Mac 11.2.13&quot;&gt;&lt;/a&gt;Navicat Premium for Mac 11.2.13&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://dl.download.csdn.net/down11/20160414/d2e77ceae41a1ce34238a41c92b20eaa.zip?response-content-disposition=attachment%3Bfilename%3D%22zh-Hans.lproj.zip%22&amp;amp;OSSAccessKeyId=9q6nvzoJGowBj4q1&amp;amp;Expires=1476279425&amp;amp;Signature=fz1IZOBLQ5AK2T9yraJ9nzigcZo%3D&quot;&gt;下载后&lt;/a&gt;，解压，拖入，app右键显示包内内容/Contents/Resources 即可。&lt;/p&gt;
&lt;h2 id=&quot;Sketch41&quot;&gt;&lt;a href=&quot;#Sketch41&quot; class=&quot;headerlink&quot; title=&quot;Sketch41&quot;&gt;&lt;/a&gt;Sketch41&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/cute/SketchI18N&quot;&gt;https://github.com/cute/SketchI18N&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="奇技淫巧" scheme="lns666.me/categories/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    
    
      <category term="软件" scheme="lns666.me/tags/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="汉化" scheme="lns666.me/tags/%E6%B1%89%E5%8C%96/"/>
    
      <category term="Mac" scheme="lns666.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Google搜索技巧</title>
    <link href="lns666.me/blog/16/google-search-skill/"/>
    <id>lns666.me/blog/16/google-search-skill/</id>
    <published>2016-10-20T12:46:23.000Z</published>
    <updated>2017-05-26T01:16:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搜索特定网页的内容"><a href="#搜索特定网页的内容" class="headerlink" title="搜索特定网页的内容"></a>搜索特定网页的内容</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">关键字 site:xxx.com</div></pre></td></tr></table></figure>
<p>例如在 百度网盘 中搜索 雅思真题<br><img src="http://ww2.sinaimg.cn/large/006y8mN6gw1fa8wrgp3rhj31a00p245j.jpg" alt=""></p>
<a id="more"></a>
<h2 id="精确搜索"><a href="#精确搜索" class="headerlink" title="精确搜索"></a>精确搜索</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&quot;关键词&quot;</div></pre></td></tr></table></figure>
<p>在搜索词上加双引号，搜索引擎就会完全的匹配你所要的词<br><img src="https://ws4.sinaimg.cn/large/006tNc79gy1ffyhlt199vj319o0kydic.jpg" alt=""></p>
<h2 id="缩小范围"><a href="#缩小范围" class="headerlink" title="缩小范围"></a>缩小范围</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">- 关键词</div></pre></td></tr></table></figure>
<p>通过减号，能够去掉一些无关的搜索结果<br><img src="https://ws2.sinaimg.cn/large/006tNc79gy1ffyhvqobspj319u0ncaci.jpg" alt=""><br><img src="https://ws3.sinaimg.cn/large/006tNc79gy1ffyhwde59ij319y0m0ta9.jpg" alt=""></p>
<h2 id="近义词关联"><a href="#近义词关联" class="headerlink" title="近义词关联"></a>近义词关联</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">~ 关键字</div></pre></td></tr></table></figure>
<p>例如搜索 番茄炒蛋，可以看到在搜索结果中 西红柿 也被作为关键字<br><img src="http://ww3.sinaimg.cn/large/006y8mN6gw1fa8wrgq2olj319s0pqgs0.jpg" alt=""></p>
<h2 id="搜索书籍或电影"><a href="#搜索书籍或电影" class="headerlink" title="搜索书籍或电影"></a>搜索书籍或电影</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">《关键字》</div></pre></td></tr></table></figure>
<p><img src="http://ww4.sinaimg.cn/large/006y8mN6gw1fa8wrg9v5aj319k0omtdk.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006y8mN6gw1fa8wrgdwouj317s0v0456.jpg" alt=""></p>
<h2 id="直接搜索文件"><a href="#直接搜索文件" class="headerlink" title="直接搜索文件"></a>直接搜索文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">关键字 “filetype:” 文件格式</div></pre></td></tr></table></figure>
<p><img src="http://ww1.sinaimg.cn/large/006y8mN6gw1fa8wrh4i6xj318a0q27ap.jpg" alt=""></p>
<h2 id="突破网站入口查看网站内容"><a href="#突破网站入口查看网站内容" class="headerlink" title="突破网站入口查看网站内容"></a>突破网站入口查看网站内容</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">index of / 关键字</div></pre></td></tr></table></figure>
<p>例如:</p>
<ul>
<li>index of /inurl:lib 你将进入许多图书馆下载喜欢的书籍.</li>
<li>index of /cnki 可以找到许多图书馆的CNKI、VIP、超星等入口.</li>
<li>index of /ppt 可以突破网站入口下载powerpint作品.</li>
<li>index of /mp3 可以突破网站入口下载mp3、rm等影视作品.</li>
<li>indexof /软件名 可以突破网站入口下载软件.</li>
<li>如果你输入：indexof/ AVI ???</li>
<li>或者其他更有意思的 Index of /admin, Index of/ secret</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搜索特定网页的内容&quot;&gt;&lt;a href=&quot;#搜索特定网页的内容&quot; class=&quot;headerlink&quot; title=&quot;搜索特定网页的内容&quot;&gt;&lt;/a&gt;搜索特定网页的内容&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;关键字 site:xxx.com&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如在 百度网盘 中搜索 雅思真题&lt;br&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/006y8mN6gw1fa8wrgp3rhj31a00p245j.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="奇技淫巧" scheme="lns666.me/categories/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    
    
      <category term="技巧" scheme="lns666.me/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Google" scheme="lns666.me/tags/Google/"/>
    
      <category term="搜索" scheme="lns666.me/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>测试文章标题</title>
    <link href="lns666.me/blog/16/test/"/>
    <id>lns666.me/blog/16/test/</id>
    <published>2016-10-18T07:37:53.000Z</published>
    <updated>2017-02-17T01:27:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown简介"><a href="#Markdown简介" class="headerlink" title="Markdown简介"></a>Markdown简介</h1><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档.</p>
<a id="more"></a>
<h1 id="Markdown-简明语法手册"><a href="#Markdown-简明语法手册" class="headerlink" title="Markdown 简明语法手册"></a>Markdown 简明语法手册</h1><h2 id="1-斜体和粗体"><a href="#1-斜体和粗体" class="headerlink" title="1. 斜体和粗体"></a>1. 斜体和粗体</h2><p>使用 <em> 和 *</em> 表示斜体和粗体。</p>
<p>示例：</p>
<p>这是 <em>斜体</em>，这是 <strong>粗体</strong>。</p>
<h2 id="2-分级标题"><a href="#2-分级标题" class="headerlink" title="2. 分级标题"></a>2. 分级标题</h2><p>使用 === 表示一级标题，使用 — 表示二级标题。</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">这是一个一级标题</div><div class="line">============================</div><div class="line"></div><div class="line">这是一个二级标题</div><div class="line">--------------------------------------------------</div><div class="line"></div><div class="line">### 这是一个三级标题</div></pre></td></tr></table></figure>
<p>你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：# H1, ## H2, ### H3，#### H4。</p>
<h2 id="3-外链接"><a href="#3-外链接" class="headerlink" title="3. 外链接"></a>3. 外链接</h2><p>使用 [描述](链接地址) 为文字增加外链接。</p>
<p>示例：</p>
<p>这是去往 <a href="http://ghosertblog.github.com" target="_blank" rel="external">本人博客</a> 的链接。</p>
<h2 id="4-无序列表"><a href="#4-无序列表" class="headerlink" title="4. 无序列表"></a>4. 无序列表</h2><p>使用 *，+，- 表示无序列表。</p>
<p>示例：</p>
<ul>
<li>无序列表项 一</li>
<li>无序列表项 二</li>
<li>无序列表项 三</li>
</ul>
<h2 id="5-有序列表"><a href="#5-有序列表" class="headerlink" title="5. 有序列表"></a>5. 有序列表</h2><p>使用数字和点表示有序列表。</p>
<p>示例：</p>
<ol>
<li>有序列表项 一</li>
<li>有序列表项 二</li>
<li>有序列表项 三</li>
</ol>
<h2 id="6-文字引用"><a href="#6-文字引用" class="headerlink" title="6. 文字引用"></a>6. 文字引用</h2><p>使用 &gt; 表示文字引用。</p>
<p>示例：</p>
<blockquote>
<p>野火烧不尽，春风吹又生。</p>
</blockquote>
<h2 id="7-行内代码块"><a href="#7-行内代码块" class="headerlink" title="7. 行内代码块"></a>7. 行内代码块</h2><p>使用 `代码` 表示行内代码块。</p>
<p>示例：</p>
<p>让我们聊聊 <code>html</code>。</p>
<h2 id="8-代码块"><a href="#8-代码块" class="headerlink" title="8.  代码块"></a>8.  代码块</h2><p>使用 四个缩进空格 表示代码块。</p>
<p>示例：</p>
<pre><code>这是一个代码块，此行左侧有四个不可见的空格。
</code></pre><h2 id="9-插入图像"><a href="#9-插入图像" class="headerlink" title="9.  插入图像"></a>9.  插入图像</h2><p>使用 ![描述](图片链接地址) 插入图像。</p>
<p>示例：</p>
<p><img src="https://www.zybuluo.com/static/img/my_head.jpg" alt="我的头像"></p>
<h2 id="10-插入音乐"><a href="#10-插入音乐" class="headerlink" title="10.  插入音乐"></a>10.  插入音乐</h2><p>使用HTML代码插入音乐。如果想要居中显示可以使用<code>&lt;center&gt; &lt;/center&gt;</code>包裹。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">330</span> <span class="attr">height</span>=<span class="string">86</span> </span></div><div class="line">	<span class="attr">src</span>=<span class="string">"http://music.163.com/outchain/player?type=2&amp;id=25706282&amp;auto=0&amp;height=66"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div></pre></td></tr></table></figure>
<p>示例：</p>
<center><br><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66"><br></iframe><br></center>

<h2 id="11-插入视频"><a href="#11-插入视频" class="headerlink" title="11.   插入视频"></a>11.   插入视频</h2><p>插入视频也和音乐类似，同样使用使用HTML代码。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">iframe</span> </span></div><div class="line">	<span class="attr">height</span>=<span class="string">498</span> <span class="attr">width</span>=<span class="string">510</span> </div><div class="line">	<span class="attr">src</span>=<span class="string">"http://www.bilibili.com/video/av8604995/"</span> </div><div class="line">	<span class="attr">frameborder</span>=<span class="string">0</span> <span class="attr">allowfullscreen</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div></pre></td></tr></table></figure>
<p>在视频网站中也能找到视频地址，复制代码粘贴到md文件中即可。</p>
<p><img src="https://ww2.sinaimg.cn/large/006tNbRwgy1fct73ldvdzj30vw0mcta7.jpg" alt="B站视频地址示例"></p>
<p>优酷视频示例：</p>
<iframe height="350" width="540" src="http://player.youku.com/embed/XNjcyMDU4Njg0" frameborder="0" allowfullscreen><br></iframe>

<p><br></p>
<p>B站视频示例：</p>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=8604995&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash"><br>

<h1 id="Markdown-高阶语法手册"><a href="#Markdown-高阶语法手册" class="headerlink" title="Markdown 高阶语法手册"></a>Markdown 高阶语法手册</h1><h2 id="1-内容目录"><a href="#1-内容目录" class="headerlink" title="1. 内容目录"></a>1. 内容目录</h2><p>在段落中填写 <code>[TOC]</code> 以显示全文内容的目录结构。</p>
<p>[TOC]</p>
<h2 id="2-标签分类"><a href="#2-标签分类" class="headerlink" title="2. 标签分类"></a>2. 标签分类</h2><p>在编辑区任意行的列首位置输入以下代码给文稿标签：</p>
<p>标签： 数学 英语 Markdown</p>
<p>或者</p>
<p>Tags： 数学 英语 Markdown</p>
<h2 id="3-删除线"><a href="#3-删除线" class="headerlink" title="3. 删除线"></a>3. 删除线</h2><p>使用 ~~ 表示删除线。</p>
<p><del>这是一段错误的文本。</del></p>
<h2 id="4-注脚"><a href="#4-注脚" class="headerlink" title="4. 注脚"></a>4. 注脚</h2><p>使用 [^keyword] 表示注脚。</p>
<p>这是一个注脚[^footnote]的样例。</p>
<p>这是第二个注脚[^footnote2]的样例。</p>
<h2 id="5-LaTeX-公式"><a href="#5-LaTeX-公式" class="headerlink" title="5. LaTeX 公式"></a>5. LaTeX 公式</h2><p>$ 表示行内公式： </p>
<p>质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</p>
<p>$$ 表示整行公式：</p>
<p>$$\sum_{i=1}^n a_i=0$$</p>
<p>$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</p>
<p>$$\sum^{j-1}<em>{k=0}{\widehat{\gamma}</em>{kj} z_k}$$</p>
<p>访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="external">MathJax</a> 参考更多使用方法。</p>
<h2 id="6-加强的代码块"><a href="#6-加强的代码块" class="headerlink" title="6. 加强的代码块"></a>6. 加强的代码块</h2><p>支持四十一种编程语言的语法高亮的显示，行号显示。</p>
<p>非代码示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ sudo apt-get install vim-gnome</div></pre></td></tr></table></figure>
<p>Python 示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="meta">@requires_authorization</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span><span class="params">(param1=<span class="string">''</span>, param2=<span class="number">0</span>)</span>:</span></div><div class="line">    <span class="string">'''A docstring'''</span></div><div class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></div><div class="line">        <span class="keyword">print</span> <span class="string">'Greater'</span></div><div class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span>) <span class="keyword">or</span> <span class="keyword">None</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">'''interpreter</span></div><div class="line"><span class="meta">... </span>prompt'''</div></pre></td></tr></table></figure>
<p>JavaScript 示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">* nth element in the fibonacci series.</div><div class="line">* @param n &gt;= 0</div><div class="line">* @return the nth element, &gt;= 0.</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fib</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> a = <span class="number">1</span>, b = <span class="number">1</span>;</div><div class="line">  <span class="keyword">var</span> tmp;</div><div class="line">  <span class="keyword">while</span> (--n &gt;= <span class="number">0</span>) &#123;</div><div class="line">    tmp = a;</div><div class="line">    a += b;</div><div class="line">    b = tmp;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> a;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">document</span>.write(fib(<span class="number">10</span>));</div></pre></td></tr></table></figure>
<h2 id="7-流程图"><a href="#7-流程图" class="headerlink" title="7. 流程图"></a>7. 流程图</h2><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">st=&gt;start: Start:&gt;https://www.zybuluo.com</div><div class="line">io=&gt;inputoutput: verification</div><div class="line">op=&gt;operation: Your Operation</div><div class="line">cond=&gt;condition: Yes or No?</div><div class="line">sub=&gt;subroutine: Your Subroutine</div><div class="line">e=&gt;end</div><div class="line"></div><div class="line">st-&gt;io-&gt;op-&gt;cond</div><div class="line">cond(yes)-&gt;e</div><div class="line">cond(no)-&gt;sub-&gt;io</div></pre></td></tr></table></figure>
<h3 id="更多语法参考：流程图语法参考"><a href="#更多语法参考：流程图语法参考" class="headerlink" title="更多语法参考：流程图语法参考"></a>更多语法参考：<a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="external">流程图语法参考</a></h3><h2 id="8-序列图"><a href="#8-序列图" class="headerlink" title="8. 序列图"></a>8. 序列图</h2><h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">Alice-&gt;Bob: Hello Bob, how are you?</div><div class="line">Note right of Bob: Bob thinks</div><div class="line">Bob--&gt;Alice: I am good thanks!</div></pre></td></tr></table></figure>
<h3 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">Title: Here is a title</div><div class="line">A-&gt;B: Normal line</div><div class="line">B--&gt;C: Dashed line</div><div class="line">C-&gt;&gt;D: Open arrow</div><div class="line">D--&gt;&gt;A: Dashed open arrow</div></pre></td></tr></table></figure>
<h3 id="更多语法参考：序列图语法参考"><a href="#更多语法参考：序列图语法参考" class="headerlink" title="更多语法参考：序列图语法参考"></a>更多语法参考：<a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="external">序列图语法参考</a></h3><h2 id="9-甘特图"><a href="#9-甘特图" class="headerlink" title="9. 甘特图"></a>9. 甘特图</h2><p>甘特图内在思想简单。基本是一条线条图，横轴表示时间，纵轴表示活动（项目），线条表示在整个期间上计划和实际的活动完成情况。它直观地表明任务计划在什么时候进行，及实际进展与计划要求的对比。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">title 项目开发流程</div><div class="line">section 项目确定</div><div class="line">    需求分析       :a1, 2016-06-22, 3d</div><div class="line">    可行性报告     :after a1, 5d</div><div class="line">    概念验证       : 5d</div><div class="line">section 项目实施</div><div class="line">    概要设计      :2016-07-05  , 5d</div><div class="line">    详细设计      :2016-07-08, 10d</div><div class="line">    编码          :2016-07-15, 10d</div><div class="line">    测试          :2016-07-22, 5d</div><div class="line">section 发布验收</div><div class="line">    发布: 2d</div><div class="line">    验收: 3d</div></pre></td></tr></table></figure>
<h3 id="更多语法参考：甘特图语法参考"><a href="#更多语法参考：甘特图语法参考" class="headerlink" title="更多语法参考：甘特图语法参考"></a>更多语法参考：<a href="https://knsv.github.io/mermaid/#gant-diagrams" target="_blank" rel="external">甘特图语法参考</a></h3><h2 id="10-Mermaid-流程图"><a href="#10-Mermaid-流程图" class="headerlink" title="10. Mermaid 流程图"></a>10. Mermaid 流程图</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">A[Hard edge] --&gt;|Link text| B(Round edge)</div><div class="line">B --&gt; C&#123;Decision&#125;</div><div class="line">C --&gt;|One| D[Result one]</div><div class="line">C --&gt;|Two| E[Result two]</div></pre></td></tr></table></figure>
<h3 id="更多语法参考：Mermaid-流程图语法参考"><a href="#更多语法参考：Mermaid-流程图语法参考" class="headerlink" title="更多语法参考：Mermaid 流程图语法参考"></a>更多语法参考：<a href="https://knsv.github.io/mermaid/#flowcharts-basic-syntax" target="_blank" rel="external">Mermaid 流程图语法参考</a></h3><h2 id="11-Mermaid-序列图"><a href="#11-Mermaid-序列图" class="headerlink" title="11. Mermaid 序列图"></a>11. Mermaid 序列图</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">Alice-&gt;John: Hello John, how are you?</div><div class="line">loop every minute</div><div class="line">    John--&gt;Alice: Great!</div><div class="line">end</div></pre></td></tr></table></figure>
<h3 id="更多语法参考：Mermaid-序列图语法参考"><a href="#更多语法参考：Mermaid-序列图语法参考" class="headerlink" title="更多语法参考：Mermaid 序列图语法参考"></a>更多语法参考：<a href="https://knsv.github.io/mermaid/#sequence-diagrams" target="_blank" rel="external">Mermaid 序列图语法参考</a></h3><h2 id="12-表格支持"><a href="#12-表格支持" class="headerlink" title="12. 表格支持"></a>12. 表格支持</h2><table>
<thead>
<tr>
<th>项目</th>
<th style="text-align:right">价格</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>计算机</td>
<td style="text-align:right">\$1600</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td>手机</td>
<td style="text-align:right">\$12</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td>管线</td>
<td style="text-align:right">\$1</td>
<td style="text-align:center">234</td>
</tr>
</tbody>
</table>
<h2 id="13-定义型列表"><a href="#13-定义型列表" class="headerlink" title="13. 定义型列表"></a>13. 定义型列表</h2><p>名词 1<br>:   定义 1（左侧有一个可见的冒号和四个不可见的空格）</p>
<p>代码块 2<br>:   这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）</p>
<pre><code>代码块（左侧有八个不可见的空格）
</code></pre><h2 id="14-Html-标签"><a href="#14-Html-标签" class="headerlink" title="14. Html 标签"></a>14. Html 标签</h2><p>本站支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格：</p>
<pre><code>&lt;table&gt;
    &lt;tr&gt;
        &lt;th rowspan=&quot;2&quot;&gt;值班人员&lt;/th&gt;
        &lt;th&gt;星期一&lt;/th&gt;
        &lt;th&gt;星期二&lt;/th&gt;
        &lt;th&gt;星期三&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;李强&lt;/td&gt;
        &lt;td&gt;张明&lt;/td&gt;
        &lt;td&gt;王平&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
</code></pre><table><br>    <tr><br>        <th rowspan="2">值班人员</th><br>        <th>星期一</th><br>        <th>星期二</th><br>        <th>星期三</th><br>    </tr><br>    <tr><br>        <td>李强</td><br>        <td>张明</td><br>        <td>王平</td><br>    </tr><br></table>

<h2 id="15-内嵌图标"><a href="#15-内嵌图标" class="headerlink" title="15. 内嵌图标"></a>15. 内嵌图标</h2><p>本站的图标系统对外开放，在文档中输入</p>
<pre><code>&lt;i class=&quot;icon-weibo&quot;&gt;&lt;/i&gt;
</code></pre><p>即显示微博的图标： <i class="icon-weibo icon-2x"></i></p>
<p>替换 上述 <code>i 标签</code> 内的 <code>icon-weibo</code> 以显示不同的图标，例如：</p>
<pre><code>&lt;i class=&quot;icon-renren&quot;&gt;&lt;/i&gt;
</code></pre><p>即显示人人的图标： <i class="icon-renren icon-2x"></i></p>
<p>更多的图标和玩法可以参看 <a href="http://fortawesome.github.io/Font-Awesome/3.2.1/icons/" target="_blank" rel="external">font-awesome</a> 官方网站。</p>
<h2 id="16-待办事宜-Todo-列表"><a href="#16-待办事宜-Todo-列表" class="headerlink" title="16. 待办事宜 Todo 列表"></a>16. 待办事宜 Todo 列表</h2><p>使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如：</p>
<pre><code>- [ ] **Markdown 开发**
    - [ ] 改进渲染算法，使用局部渲染技术提高渲染效率
    - [ ] 支持以 PDF 格式导出文稿
    - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments)
    - [x] 改进 LaTex 功能
        - [x] 修复 LaTex 公式渲染问题
        - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers)
- [ ] **七月旅行准备**
    - [ ] 准备邮轮上需要携带的物品
    - [ ] 浏览日本免税店的物品
    - [x] 购买蓝宝石公主号七月一日的船票
</code></pre><p>对应显示如下待办事宜 Todo 列表：</p>
<ul>
<li>[ ] <strong>Markdown 开发</strong><ul>
<li>[ ] 改进渲染算法，使用局部渲染技术提高渲染效率</li>
<li>[ ] 支持以 PDF 格式导出文稿</li>
<li>[x] 新增Todo列表功能 <a href="https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments" target="_blank" rel="external">语法参考</a></li>
<li>[x] 改进 LaTex 功能<ul>
<li>[x] 修复 LaTex 公式渲染问题</li>
<li>[x] 新增 LaTex 公式编号功能 <a href="http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers" target="_blank" rel="external">语法参考</a></li>
</ul>
</li>
</ul>
</li>
<li>[ ] <strong>七月旅行准备</strong><ul>
<li>[ ] 准备邮轮上需要携带的物品</li>
<li>[ ] 浏览日本免税店的物品</li>
<li>[x] 购买蓝宝石公主号七月一日的船票</li>
</ul>
</li>
</ul>
<blockquote>
<p>文章复制至<a href="https://www.zybuluo.com/" target="_blank" rel="external">作业部落</a>仅用于格式测试.</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Markdown简介&quot;&gt;&lt;a href=&quot;#Markdown简介&quot; class=&quot;headerlink&quot; title=&quot;Markdown简介&quot;&gt;&lt;/a&gt;Markdown简介&lt;/h1&gt;&lt;p&gt;Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档.&lt;/p&gt;
    
    </summary>
    
      <category term="测试分类" scheme="lns666.me/categories/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/"/>
    
    
      <category term="测试标签" scheme="lns666.me/tags/%E6%B5%8B%E8%AF%95%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
</feed>
